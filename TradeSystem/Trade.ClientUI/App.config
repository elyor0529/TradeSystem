<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=4.0.0.0"/>

    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
  </configSections>
  <connectionStrings>
    <add name="MainContext" connectionString="Data Source=.\SQLEXPRESS;User ID=sa;Password=web@1234;Initial Catalog=TradeSystem;MultipleActiveResultSets=True;" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <unity>
    <typeAliases>

      <!-- Core elements and utils -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,Microsoft.Practices.Unity"/>
      <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager,Microsoft.Practices.Unity"/>
      <typeAlias alias="perHttpRequestLifetime" type="Trade.Core.PerHttpRequestLifetime, Trade.Core"/>
      <typeAlias alias="RepositoryContextBase" type="Trade.Data.RepositoryContextBase, Trade.Data"/>
      <typeAlias alias="DbContext" type="System.Data.Entity.DbContext, EntityFramework"/>
      <typeAlias alias="MainContext" type="Trade.Data.MainContext, Trade.Data"/>
      <!-- Core elements and utils end -->

      <!-- Data -->
      <typeAlias alias="SqlServerRepositoryContext" type="Trade.Data.SqlServerRepositoryContext, Trade.Data"/>
      <!-- Data end -->

      <!-- Services -->

      <!--interfaces-->
      <typeAlias alias="ICategoryService" type="Trade.Services.Interface.ICategoryService, Trade.Services"/>
      <typeAlias alias="IClientService" type="Trade.Services.Interface.IClientService, Trade.Services"/>
      <typeAlias alias="IClientTypeService" type="Trade.Services.Interface.IClientTypeService, Trade.Services"/>
      <typeAlias alias="IEmployeeService" type="Trade.Services.Interface.IEmployeeService, Trade.Services"/>
      <typeAlias alias="IExpenseService" type="Trade.Services.Interface.IExpenseService, Trade.Services"/>
      <typeAlias alias="IFolderService" type="Trade.Services.Interface.IFolderService, Trade.Services"/>
      <typeAlias alias="IManagerService" type="Trade.Services.Interface.IManagerService, Trade.Services"/>
      <typeAlias alias="IOrderService" type="Trade.Services.Interface.IOrderService, Trade.Services"/>
      <typeAlias alias="IPaymentService" type="Trade.Services.Interface.IPaymentService, Trade.Services"/>
      <typeAlias alias="IProductService" type="Trade.Services.Interface.IProductService, Trade.Services"/>
      <typeAlias alias="IRemainderService" type="Trade.Services.Interface.IRemainderService, Trade.Services"/>

      <!--classes-->
      <typeAlias alias="CategoryService" type="Trade.Services.CategoryService, Trade.Services"/>
      <typeAlias alias="ClientService" type="Trade.Services.ClientService, Trade.Services"/>
      <typeAlias alias="ClientTypeService" type="Trade.Services.ClientTypeService, Trade.Services"/>
      <typeAlias alias="EmployeeService" type="Trade.Services.EmployeeService, Trade.Services"/>
      <typeAlias alias="ExpenseService" type="Trade.Services.ExpenseService, Trade.Services"/>
      <typeAlias alias="FolderService" type="Trade.Services.FolderService, Trade.Services"/>
      <typeAlias alias="ManagerService" type="Trade.Services.ManagerService, Trade.Services"/>
      <typeAlias alias="OrderService" type="Trade.Services.OrderService, Trade.Services"/>
      <typeAlias alias="PaymentService" type="Trade.Services.PaymentService, Trade.Services"/>
      <typeAlias alias="ProductService" type="Trade.Services.ProductService, Trade.Services"/>
      <typeAlias alias="RemainderService" type="Trade.Services.RemainderService, Trade.Services"/>

      <!-- Services end -->
    </typeAliases>
    <containers>
      <container name="container">
        <types>
          <type type="DbContext" mapTo="MainContext">
            <lifetime type="perHttpRequestLifetime"/>
          </type>
          <!-- New repository -->
          <type type="RepositoryContextBase" mapTo="SqlServerRepositoryContext">
            <constructor>
              <param name="context">
                <dependency/>
              </param>
            </constructor>
          </type>
          <!-- New repository End-->
          <!-- Services -->
          <type type="ICategoryService" mapTo="CategoryService">
            <constructor/>
          </type>
          <type type="IClientService" mapTo="ClientService">
            <constructor/>
          </type>
          <type type="IClientTypeService" mapTo="ClientTypeService">
            <constructor/>
          </type>
          <type type="IEmployeeService" mapTo="EmployeeService">
            <constructor/>
          </type>
          <type type="IExpenseService" mapTo="ExpenseService">
            <constructor/>
          </type>
          <type type="IFolderService" mapTo="FolderService">
            <constructor/>
          </type>
          <type type="IManagerService" mapTo="ManagerService">
            <constructor/>
          </type>
          <type type="IOrderService" mapTo="OrderService">
            <constructor/>
          </type>
          <type type="IPaymentService" mapTo="PaymentService">
            <constructor/>
          </type>
          <type type="IProductService" mapTo="ProductService">
            <constructor/>
          </type>
          <type type="IRemainderService" mapTo="RemainderService">
            <constructor/>
          </type>
        </types>
        <!-- Services end-->
      </container>
    </containers>
  </unity>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/></startup></configuration>
